buildscript {
	ext {
		springBootVersion = '1.3.3.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}") 
	}
}

apply plugin: 'java'
apply plugin: 'eclipse-wtp'
apply plugin: 'spring-boot' 
apply plugin: 'war'


war {
	baseName = 'badboyz'
	version = '0.0.1-SNAPSHOT'
}
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
	mavenCentral()
}

configurations {
	providedRuntime
}

dependencies {
	compile('org.springframework.boot:spring-boot-starter-data-jpa')
	/*compile('org.springframework.boot:spring-boot-starter-security')*/
	compile('org.springframework.boot:spring-boot-starter-thymeleaf')
	compile('org.springframework.boot:spring-boot-starter-web')
	compile('org.postgresql:postgresql:9.4.1208')
	compile('org.springframework.boot:spring-boot-starter-mail')
	compile 'javax.el:javax.el-api:3.0.1-b04'
	compile 'org.glassfish.jersey.core:jersey-common:2.22.2'

	// Apache Commons
	compile 'commons-validator:commons-validator:1.5.0'
	compile 'commons-validator:commons-validator:1.5.0'


	compile "javax.ws.rs:javax.ws.rs-api:2.0.1"
	// Log4j Logging Framework - API
	compile group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.4.1'
	// Log4j Logging Framework - Core
	compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.4.1'

	providedRuntime('org.springframework.boot:spring-boot-starter-tomcat')

	testCompile('org.springframework.boot:spring-boot-starter-test') 
}


eclipse {
	classpath {
		 containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
		 containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'
	}
}

task wrapper(type: Wrapper) {
	gradleVersion = '2.12'
}
